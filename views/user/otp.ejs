<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Verification</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f7f7f7;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .otp-container {
      background: #fff;
      padding: 20px 30px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      text-align: center;
      width: 300px;
    }

    h2 {
      margin-bottom: 10px;
      font-size: 24px;
      color: #333;
    }

    p {
      font-size: 14px;
      color: #666;
    }

    .otp-inputs {
      display: flex;
      justify-content: space-between;
      margin: 20px 0;
    }

    .otp-input {
      width: 40px;
      height: 40px;
      text-align: center;
      font-size: 18px;
      border: 1px solid #ccc;
      border-radius: 5px;
      outline: none;
    }

    .otp-input:focus {
      border-color: #007bff;
      box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .btn {
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 10px 15px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
    }

    .btn1 {
      background-color: #1e932a;
      color: #fff;
      border: none;
      padding: 10px 15px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
    }


    .btn:hover {
      background-color: #0056b3;
    }

    a {
      color: #007bff;
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    .btn-disabled {
      background-color: #f9eeee;
      cursor: not-allowed;
      opacity: 0.6;
    }

    #resendTimer {
      color: #007bff;
      margin-left: 10px;
      font-weight: bold;
    }
  </style>
</head>

<body>
  <div class="otp-container">
    <h2>OTP Verification</h2>
    <p>Please enter the 6-digit OTP sent to <span id="emailDisplay"></span></p>
    <form id="otpForm">
      <label style="color:#db4437" id="informationlabel" for=""></label>
      <input type="hidden" id="emailInput" name="email" value="<%=email%>">
      <div class="otp-inputs">
        <input type="text" maxlength="1" class="otp-input" id="id1" required>
        <input type="text" maxlength="1" class="otp-input" id="id2" required>
        <input type="text" maxlength="1" class="otp-input" id="id3" required>
        <input type="text" maxlength="1" class="otp-input" id="id4" required>
        <input type="text" maxlength="1" class="otp-input" id="id5" required>
        <input type="text" maxlength="1" class="otp-input" id="id6" required>

      </div>
      <div id="errorMessage" class="error-message"></div>
      <button type="submit" class="btn1">Verify OTP</button>

      <a class="btn btn-primary" href="#" id="resendOtp">Resend OTP</a>
      <span id="resendTimer"></span>
    </form>
  </div>


  <script>
    function moveNext(current, nextId) {
      if (current.value.trim() !== "" && nextId) {
        const next = document.getElementById(nextId);
        if (next) {
          next.focus();
        }
      }
    }

    //attach addevent listeners
    for (let i = 1; i <= 6; i++) {
      const currentId = `id${i}`;
      const nextId = i < 6 ? `id${i + 1}` : null;

      const currentInput = document.getElementById(currentId);
      if (currentInput) {
        currentInput.addEventListener("input", () => moveNext(currentInput, nextId));

        // backspace to move to the previous field
        currentInput.addEventListener("keydown", (event) => {
          if (event.key === "Backspace" && currentInput.value === "" && i > 1) {
            const prevId = `id${i - 1}`;
            const prevInput = document.getElementById(prevId);
            if (prevInput) {
              prevInput.focus();
            }
          }
        });
      }
    }


    const form = document.getElementById("otpForm")
    form.addEventListener('submit', async function(event) {
      event.preventDefault()

      const otp = [
        document.getElementById('id1').value.trim(),
        document.getElementById('id2').value.trim(),
        document.getElementById('id3').value.trim(),
        document.getElementById('id4').value.trim(),
        document.getElementById('id5').value.trim(),
        document.getElementById('id6').value.trim()
      ].join("")
      email = document.getElementById('emailInput').value.trim(),
        console.log("form data is .", email, otp);

      const result = await fetch("/verifyOtp", {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          otp,
          email
        }) // Wrap in an object  
      }).then(response => response.json())
      // console.log(result.message);
      if (result.success === true) {
        window.location.href = '/login'

      } else {
        document.getElementById("informationlabel").innerHTML = result.message
      }
    })
  </script>



  <script>
    const resendOtpBtn = document.getElementById('resendOtp');
    const resendTimerSpan = document.getElementById('resendTimer');
    console.log(resendTimerSpan)
    console.log(resendOtpBtn)
    let resendCooldown = false;
    let resendTimer = null;

    startResendCooldown();

    function startResendCooldown() {
      if (resendCooldown) return;

      resendCooldown = true;
      resendOtpBtn.classList.add('btn-disabled');
      resendOtpBtn.style.pointerEvents = 'none';

      let timeLeft = 30;
      resendTimerSpan.textContent = `(${timeLeft}s)`;

      resendTimer = setInterval(() => {
        timeLeft--;
        resendTimerSpan.textContent = `(${timeLeft}s)`;

        if (timeLeft <= 0) {
          clearInterval(resendTimer);
          resendOtpBtn.classList.remove('btn-disabled');
          resendOtpBtn.style.pointerEvents = 'auto';
          resendTimerSpan.textContent = '';
          resendCooldown = false;
        }
      }, 1000);
    }

    document.getElementById('resendOtp').addEventListener('click', async function(event) {
      event.preventDefault();

      // Check if already in cooldown
      if (resendCooldown) return;

      const email = document.getElementById('emailInput').value.trim();

      try {
        console.log('otp resopnce send')
        const response = await fetch(`/resendOtp/${email}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            email
          })
        });
        // console.log(response)
        // console.log('before sucess')
        const informationLabel = document.getElementById('informationlabel');
        if (response.ok) {
          const result = await response.json();
          // console.log(result)
          informationLabel.innerText = result.message;
          // console.log('logged....!')
          startResendCooldown();
        } else {
          informationLabel.innerText = result.message;
        }
      } catch (error) {
        console.error('Error resending OTP:', error);
        const informationLabel = document.getElementById('informationlabel');
        informationLabel.innerText = 'An error occurred. Please try again.';
      }
    });

    // Prevent multiple timer instances
    window.addEventListener('beforeunload', () => {
      if (resendTimer) {
        clearInterval(resendTimer);
      }
    });
  </script>




</body>

</html>